/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class OrdenTrilla extends javax.swing.JDialog {
    private Connection conexion;
    private boolean hacerVisible;
    private int contadorIDOrdenesEnBD, totalSacos;
    private float totalQuintales;
    private DefaultTableModel modelRecibosDisponibles, modelRecibosSeleccionados;
    private ArrayList<Integer> listaIDCosecha, listaIDCafe;
    /**
     * Creates new form OrdenTrilla
     */
    public OrdenTrilla(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public OrdenTrilla(java.awt.Frame parent, boolean modal, Connection conexion) {
        super(parent, modal);
        initComponents();
        hacerVisible = true;
        this.conexion = conexion;
        listaIDCosecha = new ArrayList<>();
        listaIDCafe = new ArrayList<>();
        modelRecibosDisponibles = (DefaultTableModel)tabla_recibos_disponibles.getModel();
        modelRecibosSeleccionados = (DefaultTableModel)tabla_recibos_seleccionados.getModel();
        totalSacos = 0;
        totalQuintales = 0.0f;
        
        // Obtengo los datos necesarios desde la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            // Obtengo el máximo Numero de Orden correlativo (Codigo) de los dentro de la BD (los nuevos tendrán un Codigo mayor y correlativo)
            ResultSet cConsulta = sentencia.executeQuery("SELECT COUNT(Codigo), MAX(Codigo) FROM OrdenTrilla");
            cConsulta.next();
            contadorIDOrdenesEnBD = (cConsulta.getInt(1)==0) ? 1 : cConsulta.getInt(2)+1;
            orden_numero.setText(""+contadorIDOrdenesEnBD);
            // Obtengo todas las cosechas (los ID's los almaceno en listaIDCosechas)
            cConsulta = sentencia.executeQuery("SELECT * FROM Cosecha");  // Si no hay registros, MAX(Codigo) será NULL
            while (cConsulta.next()) {
                listaIDCosecha.add(cConsulta.getInt("Id"));
                cosecha.addItem(cConsulta.getString("Nombre"));
            }
            // Obtención del listado de Tipos de Café (se almacenan los ID's en listaIDCafe)
            cConsulta = sentencia.executeQuery("SELECT * FROM Cafe");
            while (cConsulta.next()) {
                listaIDCafe.add(cConsulta.getInt("Id"));
                tipo_cafe.addItem(cConsulta.getString("Nombre")+" ("+(cConsulta.getBoolean("Pergamino")?"Pergamino":"Oro")+")");
            }
            
            panel_recibos_disponibles.setVisible(false);
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla.
        } catch (SQLException ex) {
            hacerVisible = false;
            JOptionPane.showMessageDialog(this, "No se puede obtener alguno de los listados desde la Base de Datos.\n\n"+ex.getMessage(), "Error al intentar obtener datos", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(OrdenTrilla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        orden_numero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        orden_fecha = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        cliente_proveedor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tipo_cafe = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        preparacion = new javax.swing.JTextField();
        marca = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabla_recibos_seleccionados = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        agregar_recibo = new javax.swing.JButton();
        crear_orden_trilla = new javax.swing.JButton();
        eliminar_recibo = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        total_quintales = new javax.swing.JTextField();
        total_sacos = new javax.swing.JTextField();
        panel_recibos_disponibles = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabla_recibos_disponibles = new javax.swing.JTable();
        seleccionar_recibo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cosecha = new javax.swing.JComboBox<>();
        buscar_recibos_por_cosecha = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cantidad_sacos_nylon = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cantidad_quintales = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cantidad_sacos_yuta = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tabla_recibos_seleccionados1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 204, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ORDEN DE TRILLA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("No.");

        orden_numero.setEditable(false);
        orden_numero.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orden_numero.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Fecha:");

        orden_fecha.setDateFormatString("yyyy-MM-dd");
        orden_fecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Cliente Proveedor:");

        cliente_proveedor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Clase de café:");

        tipo_cafe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Preparación:");

        preparacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        marca.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Marca:");

        tabla_recibos_seleccionados.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tabla_recibos_seleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Recibo No.", "Organización (Productor)", "Sacos Nylon", "Sacos Yuta", "Cantidad quintales"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_recibos_seleccionados.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla_recibos_seleccionados.setRowHeight(25);
        jScrollPane8.setViewportView(tabla_recibos_seleccionados);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Recibos utilizados:");

        agregar_recibo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        agregar_recibo.setText("Agregar Recibo");
        agregar_recibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_reciboActionPerformed(evt);
            }
        });

        crear_orden_trilla.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        crear_orden_trilla.setText("Crear Orden");
        crear_orden_trilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_orden_trillaActionPerformed(evt);
            }
        });

        eliminar_recibo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        eliminar_recibo.setText("Eliminar Recibo");
        eliminar_recibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_reciboActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Total Materia Prima:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Sacos:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Quintales:");

        total_quintales.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total_quintales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        total_quintales.setText("0.0");

        total_sacos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total_sacos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        total_sacos.setText("0.0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orden_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cliente_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipo_cafe, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preparacion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orden_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(agregar_recibo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminar_recibo))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(crear_orden_trilla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(total_sacos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(total_quintales, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(orden_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orden_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cliente_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tipo_cafe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(preparacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(agregar_recibo)
                    .addComponent(eliminar_recibo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(total_quintales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total_sacos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(crear_orden_trilla))
        );

        panel_recibos_disponibles.setBackground(new java.awt.Color(153, 153, 255));
        panel_recibos_disponibles.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recibos disponibles:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tabla_recibos_disponibles.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tabla_recibos_disponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recibo No.", "Cosecha", "Café", "Productor", "Fecha", "Número de envío", "Peso total", "Saldo actual", "No. Sacos Nylon", "No. Sacos Yuta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_recibos_disponibles.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla_recibos_disponibles.setRowHeight(25);
        tabla_recibos_disponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_recibos_disponiblesMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(tabla_recibos_disponibles);

        seleccionar_recibo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        seleccionar_recibo.setText("Seleccionar recibo");
        seleccionar_recibo.setEnabled(false);
        seleccionar_recibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionar_reciboActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Cosecha:");

        cosecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cosecha.setEnabled(false);

        buscar_recibos_por_cosecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buscar_recibos_por_cosecha.setText("Buscar");
        buscar_recibos_por_cosecha.setEnabled(false);
        buscar_recibos_por_cosecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_recibos_por_cosechaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Sacos Nylon:");

        cantidad_sacos_nylon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cantidad_sacos_nylon.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cantidad_sacos_nylon.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Quintales:");

        cantidad_quintales.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cantidad_quintales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cantidad_quintales.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Sacos Yuta:");

        cantidad_sacos_yuta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cantidad_sacos_yuta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cantidad_sacos_yuta.setEnabled(false);

        javax.swing.GroupLayout panel_recibos_disponiblesLayout = new javax.swing.GroupLayout(panel_recibos_disponibles);
        panel_recibos_disponibles.setLayout(panel_recibos_disponiblesLayout);
        panel_recibos_disponiblesLayout.setHorizontalGroup(
            panel_recibos_disponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_recibos_disponiblesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cantidad_sacos_yuta, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(seleccionar_recibo))
            .addGroup(panel_recibos_disponiblesLayout.createSequentialGroup()
                .addGroup(panel_recibos_disponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_recibos_disponiblesLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cosecha, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscar_recibos_por_cosecha))
                    .addGroup(panel_recibos_disponiblesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidad_sacos_nylon, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidad_quintales, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_recibos_disponiblesLayout.setVerticalGroup(
            panel_recibos_disponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_recibos_disponiblesLayout.createSequentialGroup()
                .addGroup(panel_recibos_disponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cosecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar_recibos_por_cosecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_recibos_disponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(cantidad_quintales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidad_sacos_nylon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panel_recibos_disponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_recibos_disponiblesLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(seleccionar_recibo))
                    .addGroup(panel_recibos_disponiblesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_recibos_disponiblesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(cantidad_sacos_yuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jPanel6.setBackground(new java.awt.Color(153, 153, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Órdenes de Trilla creadas:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tabla_recibos_seleccionados1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tabla_recibos_seleccionados1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Recibo No.", "Organización (Productor)", "Sacos Nylon", "Sacos Yuta", "Cantidad quintales"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_recibos_seleccionados1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabla_recibos_seleccionados1.setRowHeight(25);
        jScrollPane9.setViewportView(tabla_recibos_seleccionados1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_recibos_disponibles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_recibos_disponibles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregar_reciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_reciboActionPerformed
        panel_recibos_disponibles.setVisible(true);
        habilitar_busqueda_recibos(true);
    }//GEN-LAST:event_agregar_reciboActionPerformed
    private void habilitar_busqueda_recibos(boolean valorEnabled) {
        cosecha.setEnabled(valorEnabled);
        buscar_recibos_por_cosecha.setEnabled(valorEnabled);
        cantidad_sacos_nylon.setEnabled(valorEnabled);
        cantidad_sacos_yuta.setEnabled(valorEnabled);
        cantidad_quintales.setEnabled(valorEnabled);
        seleccionar_recibo.setEnabled(valorEnabled);
    }
    private void seleccionar_reciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionar_reciboActionPerformed
        int rango[] = tabla_recibos_disponibles.getSelectedRows();
        if (rango.length == 1) {
            String codigoSelec = (String)tabla_recibos_disponibles.getValueAt(rango[0], 0);
            // Primero verifico que el Código del Recibo seleccionado no esté en la Tabla de Recibos Seleccionados
            int cantidad = tabla_recibos_seleccionados.getRowCount(), cont;
            boolean yaSeleccionado = false;
            for(cont=0; cont<cantidad; cont++) {
                if (codigoSelec.equals((String)tabla_recibos_seleccionados.getValueAt(cont, 1))) {
                    yaSeleccionado = true;
                    break;
                }
            }
            if (yaSeleccionado) {
                tabla_recibos_seleccionados.setRowSelectionInterval(cont, cont);
                JOptionPane.showMessageDialog(this, "El Recibo ya fue seleccionado", "Aviso", JOptionPane.WARNING_MESSAGE);
            } else {
                // Evalúo que la Cantidad de Sacos y de Quintales no sea mayor a los presentes en el Recibo seleccionado
                if (Integer.parseInt(cantidad_sacos_nylon.getText()) > Integer.parseInt((String)tabla_recibos_disponibles.getValueAt(rango[0], 8)) ||
                        Integer.parseInt(cantidad_sacos_yuta.getText()) > Integer.parseInt((String)tabla_recibos_disponibles.getValueAt(rango[0], 9)) ||
                        Float.parseFloat(cantidad_quintales.getText())>Float.parseFloat((String)tabla_recibos_disponibles.getValueAt(rango[0], 7))) {
                    JOptionPane.showMessageDialog(this, "La Cantidad de Sacos o Quintales es mayor al que tiene el Recibo seleccionado", "Error en datos", JOptionPane.ERROR_MESSAGE);
                } else {    // Se agrega el Recibo seleccionado
                    // Agrego el registro a la Tabla de Recibos Seleccionados (por defecto, se copia el Saldo del Recibo)
                    modelRecibosSeleccionados.addRow(new String[]{
                        ""+(tabla_recibos_seleccionados.getRowCount()+1),
                        (String)tabla_recibos_disponibles.getValueAt(rango[0], 0),
                        (String)tabla_recibos_disponibles.getValueAt(rango[0], 3),
                        cantidad_sacos_nylon.getText(),
                        cantidad_sacos_yuta.getText(),
                        (String)tabla_recibos_disponibles.getValueAt(rango[0], 7)
                    });
                    // Actualizo el Registro del Total de Materia Prima
                    totalSacos+= Integer.parseInt(cantidad_sacos_nylon.getText()) + Integer.parseInt(cantidad_sacos_yuta.getText());
                    totalQuintales+= Float.parseFloat(cantidad_quintales.getText());
                    total_sacos.setText(""+totalSacos);
                    total_quintales.setText(""+totalQuintales);
                    
                    habilitar_busqueda_recibos(false);  // Deshabilito todos los campos relacionados a la Búsqueda de Recibos disponibles
                    panel_recibos_disponibles.setVisible(false);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione sólo un registro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_seleccionar_reciboActionPerformed

    private void buscar_recibos_por_cosechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_recibos_por_cosechaActionPerformed
        // Se hará una consulta a la Base de Datos de todos los Recibos que tengan Saldo > 0
        modelRecibosDisponibles.setRowCount(0);
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            ResultSet cRecibos = sentencia.executeQuery("SELECT Recibo.*, Cosecha.Nombre Cosecha, Productor.Nombre Productor, Cafe.Nombre Cafe, Cafe.Pergamino esPergamino, Cafe.Oro esOro  FROM Recibo "
                    + "INNER JOIN Cosecha ON Recibo.Cosecha_Id = Cosecha.Id "
                    + "INNER JOIN Productor ON Recibo.Productor_Id = Productor.Id "
                    + "INNER JOIN Cafe ON Recibo.Cafe_Id = Cafe.Id "
                    + "WHERE Recibo.Cosecha_Id = "+listaIDCosecha.get(cosecha.getSelectedIndex())+" AND Recibo.Saldo > 0");
            
            // Inicio la extracción y muestra de datos en la tabla correspondiente
            while (cRecibos.next()) {
                modelRecibosDisponibles.addRow(new String[]{
                    cRecibos.getString("Codigo"),
                    cRecibos.getString("Cosecha"),
                    cRecibos.getString("Cafe"),
                    cRecibos.getString("Productor"),
                    cRecibos.getString("Fecha"),
                    cRecibos.getString("NumEnvio"),
                    cRecibos.getString("Peso"),
                    cRecibos.getString("Saldo"),
                    cRecibos.getString("SacosNylon"),
                    cRecibos.getString("SacosYuta")});
            }   // Hasta aquí se garantiza la carga de todos los Recibos con Saldo > 0 de la cosecha seleccionada
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Descripción:\n"+ex.getMessage(), "Error de conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(OrdenTrilla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscar_recibos_por_cosechaActionPerformed

    private void tabla_recibos_disponiblesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_recibos_disponiblesMousePressed
        int rango[] = tabla_recibos_disponibles.getSelectedRows();
        if (rango.length == 1) {
            cantidad_sacos_nylon.setText((String)tabla_recibos_disponibles.getValueAt(rango[0], 8));
            cantidad_sacos_yuta.setText((String)tabla_recibos_disponibles.getValueAt(rango[0], 9));
            cantidad_quintales.setText((String)tabla_recibos_disponibles.getValueAt(rango[0], 7));
        }
    }//GEN-LAST:event_tabla_recibos_disponiblesMousePressed

    private void eliminar_reciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_reciboActionPerformed
        int rango[] = tabla_recibos_seleccionados.getSelectedRows();
        if (rango.length == 1) {
            // Primero actualizo la Cantidad de Sacos y la Cantidad de Quintales
            totalSacos-= (Integer.parseInt((String)tabla_recibos_seleccionados.getValueAt(rango[0], 3)) + Integer.parseInt((String)tabla_recibos_seleccionados.getValueAt(rango[0], 4)));
            totalQuintales-= Float.parseFloat((String)tabla_recibos_seleccionados.getValueAt(rango[0], 5));
            total_sacos.setText(""+totalSacos);
            total_quintales.setText(""+totalQuintales);
            // Ahora elimino la fila seleccionada
            int contFil = tabla_recibos_seleccionados.getRowCount(), contCol = tabla_recibos_seleccionados.getColumnCount();
            for (int fil=rango[0]; fil<(contFil-1); fil++) {
                tabla_recibos_seleccionados.setValueAt(fil+1, fil, 0);
                for(int col=1; col<contCol; col++) {
                    tabla_recibos_seleccionados.setValueAt((String)tabla_recibos_seleccionados.getValueAt(fil+1, col), fil, col);
                }
            }
            modelRecibosSeleccionados.setRowCount(modelRecibosSeleccionados.getRowCount()-1);
            // Hasta aquí se garantiza la eliminación de uno de los Recibos seleccionados
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione sólo un registro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eliminar_reciboActionPerformed

    private void crear_orden_trillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_orden_trillaActionPerformed
        Calendar fecha = orden_fecha.getCalendar();
        String instruccion = "INSERT INTO OrdenTrilla(Fecha, Cliente, Preparacion, Marca, Disponible, CafeUsado) VALUES(";
        instruccion+= "'"+fecha.get(Calendar.YEAR)+"-"+(fecha.get(Calendar.MONTH)+1)+"-"+fecha.get(Calendar.DAY_OF_MONTH)+"', ";
        instruccion+= "'"+cliente_proveedor.getText()+"', ";
        instruccion+= "'"+preparacion.getText()+"', ";
        instruccion+= "'"+marca.getText()+"', ";
        instruccion+= 1+", ";
        instruccion+= totalQuintales+")";
        System.out.println("NuevaOrdenTrilla = "+instruccion);
        try {
            conexion.prepareStatement(instruccion).executeUpdate();
            contadorIDOrdenesEnBD++;
            
            // Procedo a crear tantos Consumos como Recibos se seleccionaron en la Orden de Trilla
            int contFilas = tabla_recibos_seleccionados.getRowCount();
            for (int fil=0; fil<contFilas; fil++) {
                // Actualizo la Cantidad de Sacos y el Saldo de los Recibos seleccionados a través de la creación de los Consumos
                int idRecibo = Integer.parseInt((String)tabla_recibos_seleccionados.getValueAt(fil, 1));
                int cantSacosNylon = Integer.parseInt((String)tabla_recibos_seleccionados.getValueAt(fil, 3));
                int cantSacosYuta = Integer.parseInt((String)tabla_recibos_seleccionados.getValueAt(fil, 4));
                float cantQuintales = Float.parseFloat((String)tabla_recibos_seleccionados.getValueAt(fil, 5));
                
                // Se crea un Consumo (en la BD hay un TRIGGER encargado de la Actualización de lo que se necesita)
                Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
                ResultSet cRecibo = sentencia.executeQuery("SELECT * FROM Recibo WHERE Codigo = "+idRecibo);
                instruccion = "INSERT INTO Consumo(Recibo_Codigo, OrdenTrilla_Codigo, CantidadSacosNylon, CantidadSacosYuta, PesoUtilizado) VALUES("+idRecibo+","+(contadorIDOrdenesEnBD-1)+","+cantSacosNylon+","+cantSacosYuta+","+cantQuintales+")";
                System.out.println("NuevoConsumo = "+instruccion);
                conexion.prepareStatement(instruccion).executeUpdate();
            }
            limpiar_campos_de_orden();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al intentar guardar los datos.\n\nDescripción:\n"+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(OrdenTrilla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_crear_orden_trillaActionPerformed

    private void limpiar_campos_de_orden() {
        orden_numero.setText(""+contadorIDOrdenesEnBD);
        orden_fecha.setDate(null);
        cliente_proveedor.setText("");
        tipo_cafe.setSelectedIndex(-1);
        preparacion.setText("");
        marca.setText("");
    }
    public boolean getHacerVisible() { return hacerVisible; }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdenTrilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdenTrilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdenTrilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdenTrilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OrdenTrilla dialog = new OrdenTrilla(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar_recibo;
    private javax.swing.JButton buscar_recibos_por_cosecha;
    private javax.swing.JTextField cantidad_quintales;
    private javax.swing.JTextField cantidad_sacos_nylon;
    private javax.swing.JTextField cantidad_sacos_yuta;
    private javax.swing.JTextField cliente_proveedor;
    private javax.swing.JComboBox<String> cosecha;
    private javax.swing.JButton crear_orden_trilla;
    private javax.swing.JButton eliminar_recibo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField marca;
    private com.toedter.calendar.JDateChooser orden_fecha;
    private javax.swing.JTextField orden_numero;
    private javax.swing.JPanel panel_recibos_disponibles;
    private javax.swing.JTextField preparacion;
    private javax.swing.JButton seleccionar_recibo;
    private javax.swing.JTable tabla_recibos_disponibles;
    private javax.swing.JTable tabla_recibos_seleccionados;
    private javax.swing.JTable tabla_recibos_seleccionados1;
    private javax.swing.JComboBox<String> tipo_cafe;
    private javax.swing.JTextField total_quintales;
    private javax.swing.JTextField total_sacos;
    // End of variables declaration//GEN-END:variables
}
